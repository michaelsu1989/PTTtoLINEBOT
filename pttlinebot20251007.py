# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q1ecxU5txStR2JuXVrEt_BejbCQy0rkS
"""

import requests
from bs4 import BeautifulSoup
import json
import time
from apscheduler.schedulers.blocking import BlockingScheduler

# ====== 基本設定 ======
PTT_BOARD = "watch"
PTT_URL = f"https://www.ptt.cc/bbs/{PTT_BOARD}/index.html"
LINE_TOKEN = "EMV+bA2uaF0O26Q69gkyZoSQFao+XCr5Ns0f99cOx3DIXES2AIWLgi36DqE65kQnJ1Pk9/jPZ0vAWNMoP7B4gpWz3b93h7M5KjZNGA6LuyozJlS0LEW+Au7uw8PpO3Izj+Qhv+v7aEbxjw0zxIkaBwdB04t89/1O/w1cDnyilFU="  # 從 LINE Developers 拿到的長期 token
USER_ID = "Ud9fd3a5f8b92c09c4039257fa30fb9c5"  # 你個人的 LINE userId
KEYWORDS = ["Rolex", "Omega", "Seiko", "Tudor", "longines", "murph"]
HISTORY_FILE = "watch_notified.json"

# ====== LINE Bot 推播訊息 ======
def send_line_message(text):
    url = "https://api.line.me/v2/bot/message/push"
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {LINE_TOKEN}",
    }
    body = {
        "to": USER_ID,
        "messages": [{"type": "text", "text": text}]
    }
    try:
        res = requests.post(url, headers=headers, json=body)
        if res.status_code != 200:
            print("❌ LINE 推播失敗：", res.text)
    except Exception as e:
        print("⚠️ LINE 傳送錯誤：", e)

# ====== 儲存紀錄 ======
def load_history():
    try:
        with open(HISTORY_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return []

def save_history(history):
    with open(HISTORY_FILE, "w", encoding="utf-8") as f:
        json.dump(history, f, ensure_ascii=False, indent=2)

# ====== 爬 PTT ======
def fetch_latest_posts():
    cookies = {"over18": "1"}
    res = requests.get(PTT_URL, cookies=cookies)
    soup = BeautifulSoup(res.text, "html.parser")

    posts = []
    for tag in soup.select(".title a"):
        title = tag.text.strip()
        link = "https://www.ptt.cc" + tag["href"]
        posts.append({"title": title, "link": link})
    return posts

# ====== 主檢查流程 ======
def check_watch_board():
    print("🔍 檢查 PTT watch 看板中...")
    posts = fetch_latest_posts()
    history = load_history()
    new_found = False

    for post in posts:
        title = post["title"]
        link = post["link"]

        if link in history:
            continue

        if any(keyword.lower() in title.lower() for keyword in KEYWORDS):
            msg = f"⌚ [PTT Watch 新文章]\n{title}\n{link}"
            send_line_message(msg)
            print(f"✅ 已推播：{title}")
            history.append(link)
            new_found = True
            time.sleep(1)

    if new_found:
        save_history(history)
    else:
        print("❌ 沒有新文章符合條件")

# ====== 排程執行 ======
if __name__ == "__main__":
    scheduler = BlockingScheduler()
    scheduler.add_job(check_watch_board, "interval", minutes=10)
    print("⏱️ 開始監控 PTT Watch 板（每10分鐘檢查一次）")
    check_watch_board()
    scheduler.start()

!pip install apscheduler